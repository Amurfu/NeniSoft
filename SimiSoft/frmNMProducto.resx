<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="frmNMProducto.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>