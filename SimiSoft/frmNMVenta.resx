<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="frmNMVenta.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>