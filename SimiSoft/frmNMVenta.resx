<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="frmNMVenta.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABxxJREFUeF7t
        mn1M1Pcdx2/P3ezmsofsj5k+ID7AASoiFCkKtVJBwXaNTmnxCYUqtAYau7jMealtVdDOs9NZmc2gs3MU
        KJYOUIuOIs5lx5b6sK5ruihzpk1NM9O0m+h47fP97dNLFX931ztuuTP3Sl758Xt/Pr/vw3HP4IgRI0aM
        GDHCx+QyvjCqgppRlZwTCdBzox5mk8PF53WY6OW2CjbdWgHBeEsFT+kw0cXtK8m+fRXH4lbykYjR1Qw7
        uwJzfdP/rlHNGL2jVzFVh49sEiq4dexDfCTySbe/AK2dgemW3muvFy86S/mGThO5JKxgQ0IZiL9KKWFE
        Yhlb9DwYa5yruDmhnBY9r9BpIpfkFfSJpCznLnNungSTZCPJy7lg8kBMWsF7ctyUo0+CKeXM0NoBcx6x
        TFjEdyeWMihemDePz2kcMuaGkDHfFwcmLuHrGkceacsoFZmylL0aDRsy7gs69vc1ijwyltAkIi7QaNhI
        X8pCM3b6En6pUWRhHutZi7koDsjPIzUeNsyYZmzx/ZycCHqDlP0gs6eV8DeRa3xbLNC2oAn3+CGTW0J/
        7oNg4xltC5pwj29LYRlfmVnMtpkPcEYkSj2T9wA/yZzHl3VbgTOrmKdnLYQbwfyFbNFtBU7hAs7PWQBF
        C5ikUdQxu5jJZg/iOY0CZ+58MOpp1BL0Pu6fB0Y99Z5Hi7rsIfsImPn3g1FPvefRoi57yD4Cpvh7YNTT
        qCXofZTcy3siJXPJ0CjqWHQfmdYe7uVdjQJnaRGbl8yFG8IiHtdtBY5L3m+XFrF1eSGXRaLRFYVclOMP
        HQ4+o9v69JTPoU+kvIiZGkU8K4tIsdY8h90aBU9FAQ0ilQWs1ijikbUWmzWvKqBKo+B5pIC1j+TD6nx2
        ahTxyHqfMGuuzCdfo+CpmsV91feAHLs0igjMmvxZdTdx2h481TMYuyYPHsvjvEYRgVmTHz90ufistgeP
        eTVYezeXxEFXPl/TOGJZO4NvyloRT2gUOj+awQmRdbmR/6Zo3UyyzFrFfRqFjiuXfetz4cc5LNbI4tFe
        tj96jCsiNnq01Ytkf/RVX9NLnYgPD2vrdZG1LjNrdd2FS6PQ2ZDDepENuVf/sXLdUbrW9cg9w4fa6sVf
        3dWDR8TWo/xTW6/L49PZbNb6xHQWahQ6T05j/lPTQI4tGlls7MYt4ktt9eKvXtuNp/a34MNebb0ussZW
        s9aN04bxi5zabFJqskE8rZGF+zBl7iPgS2314q++8zAeket6CLZtoEvW8wtZy4maO3lHju/K8aQcn6+9
        k8LN2bwpPw/W5jFChwwdeSW4aWsWV8RL5lVBY8fPD5JV9yr4Ulu9+KvXv4qnXjZ6rbu3y+Zng6whEM/q
        cMOHeyp/FXFnMEYjR+MhRu49yKCIndrqxV+9uRNPUyd47YDnfiDzmrnF7VM5tS2LqqezcG7J4VtGyZPE
        ancmp7Xv3+4s5uuQw8NP72C/yI47KNTI4qVO/i5ip7Z58Vfv6MDT0Q4fu/cxMPOKAzsyqWz08UdXU3sm
        g9WmV/zPM5mUail0fpbBxl0Z8Gw6azSy6Gyn88BvwE5t8+Kv3t2GR8T4ylbYJZuXeS89m0GetvhlVyaz
        5JoB8V+7p+DUODTq0llUN0Uei+ns0ciip40tInZqmxd/dc/LeDz74Q8t0CDv53XOh7QcMHVpVJhrxWMa
        hcaedNKeS5PHY9rVL0N9rSztkwXbqW1e/NXfaMEj0vOkNZfxlN3dXutDxjCYa6T2Z1OvTyVF4+BpdHJz
        QyqD4gWNLN58iXSzYDu1zYu/en8znv4m6CyRe0AqPD/Z/nsIUzfq6RDqJ1FtjZFKjUahsXcSZ0UaJ/Ft
        jRxvtfOls02cFBli89C735kmjvuq/+NFdpx/EVrk/byZa18qCVoagqkb9XQIDSkkWT0T6dEoNBon0v7r
        CdYNMF2jsCHzfGDNJfc8jSxM5ktts9g/jq+abN8E3tYoNJqS2dqUIq/NyVRqFDZkng/NXPJbvOodnTW/
        D7XNwtwAmv9Fo9BodVLYmgTin+Q380WNw4LM8ZaZqyXJ/iGga7F9CLyciFN7fH6CDBjzzNqWRF+bE8S2
        tmTGE8pXzj6Q8RuseZLsnwR1HbY3gNSqTf2VRGo1Cp1DTm7pSKRf5P/k6SM2/xP0cY+eXoW5RmpvmHq7
        kyyNh4dDcYw8OB73wXH0y5FweyDh03+9fWAca/T63nDdS8NO11iWd40DceDweO7R2C9yXb5cc9lcJz+n
        axx9mN9cdzz13WPks8EYBl4bKx+GHD4+DElN+labXr2mXEvRi3ks98az52g8qKfEqtfiSTxyGzcZ5dwp
        PdVyPK09V3pH87AOcWPw+9EsPh7HOyK+/F0cJ6XX+kftG47Xv8MI2eQysVk2elaOl8UPxNfFXcfjmevr
        IRIjRowYMWJ8Eofjv4zvmDBCg8qUAAAAAElFTkSuQmCC
</value>
  </data>
</root>