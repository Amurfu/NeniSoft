<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="frmNMCliente.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAACXFJREFUeF7t
        mglwlOUZxxct2qlVy3gUYYpkCQEJOUggISdJOAMESEgIiSRcSbgStTOgUsQGZNQw4RDUQFHBiFyBMAzI
        ERwZkHDUWhwElaIzpbS0VbJDidxJ/v2/b55v2d3sLglkqdvZ/8xv3vf5P8/7fPt9+10bMPnkk08++eTT
        7eux6Wj/m0J0kNCqR5/HgzK1SnmqXkLvVvsiPNahCB8TCHs7PItuTxRhEec14qmxVPkdi7BTPKi5uQAP
        Syvv1JOFWNdpBkBukDqZt4Q10so7ZZ6OWlLXuRDdFZyfJSD/NBditHkGAvxmII+xRfszcJLfeie/qYiQ
        ugvSyjsVMBUg/2iM0IZzi/L8pyCl0WtU1ylIk9rTYhlrIaF3qkcBQPQB6JYHP4kV+wMLcJzjd3qcggPK
        57wuvAC/sFnr3QcgOA8gluB8lHO8JvGtuBySj+VGLK28U2GTAVvCJ+MEeaXXJAzgTgb2mQRzWB6Cw/Ix
        mONC1vzVcY208jahTcQkvB4xEVD0mYjPIydgoPKlwIW4bgIyuOa0sZZxkSS9R9HjUUJAGsicjAzcK6lm
        KTAD90WNR5n0QLQchMin8VDUBEyKysUW+qfJd+SPZD3rc3n/+N+/N8TmICMuFyD1sfxQYt+W4nLwnPSq
        i83FUo41ErvifNx4/NZUjHukxd1V/1w8kpiDmsRxAJkl9h0pKQel0q+RHBylNzVxPAIHZMNML4ReAceD
        Rk3COFSmyNPkrmpgFkoHZgMc9936em+eivltckc/132zsUpspxowFsNYc17Vcs1WtVZSnteADDycnIWL
        pGFIFoKVx7lFoQuoW8WulJyJQawDOcvrvK3YTjU0EwGsO6/rx2Km2J7X8EzkpmQC5BOxTBJbH2W3it1p
        RCaOqdoRWRgilkuxLll6X0jJwqNie1apY7A2NQMgV4hFUPG/pcQksXWHOf9BPKPeDinTYvwywagxeEss
        txqVgd2qPi39Lj1G+aj7MiMdcOBqejqeVvksfhOGn5qKR5Q3ZjTGMb5m+I6oGkNj0hAj/hGx3Iq9s6S+
        SizPKisNFwiyR8OcPQztFMnJuF/SKp+n8ppUTBTbpGqMekekRIsHuJOs/14stzLqs9NwRizPKmcU6gkc
        X3oSEvCz3JFIZ+4/Kq/IHYULOalIa8kLUgFvfrL+ulhuZVN/TSzPacJQtJ84ElBMGgmLLfSuGrmJI7CS
        4yprzJxjvTuMdWrnZNNuZdRL6BkVpKBTfgrOEbjh67wUTG5cgTb5w5HPdd84qWsuB3MG4YHGfq5l1Evo
        GU0big1ThwHk4LRhCJc5OG+n4I66fCNTOaPOHTY9w8kRiUuljUsZ6yT0jAqHoobUPTsCv5YYCp1sJdn2
        fGY4ukr8d510I9t1HtNzQ3CBXCrmzU5iKHSylWTbc+YgPC7xRZ10IfUaLHX1YnlGswZhKz8UZg7GInUQ
        9Jw4voe/8ClmvPgpviLTxbKTq7zqY/Qs4iOT21sr8R4pcapZvDFL3TmxPKPZ/RHw4gBYCMhlGdWGH5cS
        rY17cJGAOP1Lr6v8rAS0N3qSq8b4/ED0lhKneiEJyVJ7WCzPafYgdH+pP2DL3ERESlrr1BasPFUJfFOJ
        MrHs5Co/JwnRjr3pxUvapVi3RurniuVZFSfytG9ksRrnJeD3krLq3Hb3v9Gd5dlrvu6bhFLpf8v7Cy/F
        nqy7oWrn9Uei2J7Vgn6AJh7xMj9l3BhvVyvD0ZZ9vtX9EhArfd0egOJIPMSar4xaYnklHiMk7Tm9Hg8o
        NvH1luNxNX8tDlMlbacFB9BAYGW/80daSRwKdd9++KLYhHuMbUi6iV5LQGdVq+visI/zlzmvJw0l8UiT
        Ms+oNBZQ6HkMkiW+uDgeQbrARmurcIzAho8lZdXCaIRyfa3uE4fBypOeUDnbs4te+KJYvMHxitRUl8Q0
        /ssz16Yzrie1i2MQqBd4QkuiAYWEpiUxWCHemcVR9gfh0EcIOrQDJ6u3A3rcgZ6S0uLOhHDdWbV+afTN
        3//Sz6CeWMgNG+/akijMVZeOLNHi9uepPHt9JFbra3kUoJBQX7+M94pf+2Y0CtRpLGmtf5Xbv8+ry+fN
        vpjG+kuybrftzoinOEJqSAM5szwaVcv7oqgs2v7Ra2gZ3x90HeuX8eCK3Xoqi8DwskhAIZbWpkDcR+9d
        I7ciEsdW8IO+FQV/4xRWI/2uZX3xDGu+MGrZc5XjN2nk3o7AMLGaLW5jtqyfL1brqCwKHVf1wQ8ECn5o
        u+f/uxGIMnIO1BOLjE3y7/S2vywc+nzP7TwhqWaJ/WLU2j/0dv8G2WK91xsrV/cGyHUZnbKmD1axNp3z
        DeRvxKhXo4rXS/4d8V2h17Hf2/IRXEodRNYuIcdJjVpHflzdB/PLI+AnZbev90PQ8YMwXCPX1/IIc9xF
        GghsUPFGfmN2LznqfvBhENo53hfKg/HAB+GokHW2ferJ5nKeYRxvkKvrezX9f0dKy/xxP/MriGMPW66W
        98JLjttvkTaEoHB9KEAqxDJt64YH1Y4ZrE7AzyXVIql1tn14P/mlpNR2N6vtrgtt+sNKrWOuSj5XPdnI
        +rQNYXhKsa4XRtOrIA1Ss1HdfGV5y1QRgh0Em0KQKdZdUUUwxqrtVoRim1hW0X9D54JxfkuQ698MXJvA
        uhrp86rYLdPWIHxLsLUnuoh1V7QtEP6y3b+IpbUtGN3o15O6yiD0E9ulKoORZNRvDkVXsZuv7YGoJdhu
        c33rmEjYKnLsuYf3CfHs/ijCeKH2e+I9saxaG4ZzCgmtYn25WrMjEIvFar529QAUEmo58+5Uzd0O46PK
        290DcWJZtYHXu0JCq3b1RIJas7MHvhSr+arqDggWG5x5d4q77TRhr/nmf5SoCMI5TbC+L8CIJW3aF4pf
        ybpasZqvTwKAnyLbO9y8JPW9wgmS1peTrHP7N0av0H5/fHbAH6juilCx1GO5g0LfG4gRS9rE+jC1hpwQ
        y3tV3QUlh7rwF6a56WNt11O8ZxAJrTLWVJuxSCzvFXfE/4gZN8iP1f72j+YqfusKCbWOmhHA2ktqzaHO
        6C62d+toFyzgDoGc/CwAZrGbSA7W17rWDwvF9n5tMuHew2ZUykG4eNQPv6v2w5OSNh3ujM6H/TCHuVqp
        2bnvDv92+ZPTn8LRlqf3Iu5cneykQp3qCiNWuaWqVpb9/0md5jwbSngW/Jk7e5lcISf0wfFHDynzySef
        fPLJJ59cyWT6L3VNBubcbtaCAAAAAElFTkSuQmCC
</value>
  </data>
</root>